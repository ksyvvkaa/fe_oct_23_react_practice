{"version":3,"sources":["api/users.js","api/categories.js","api/products.js","App.jsx","index.jsx"],"names":["id","name","sex","title","icon","ownerId","categoryId","App","filterByUser","setFilterByUser","useState","searchQuery","setSearchQuery","filterByCategories","setFilterByCategories","preparedProducts","products","filters","map","product","category","categoriesFromServer","find","currentCategory","user","usersFromServer","currentUser","filter","preparedQuery","toLowerCase","includes","length","getPreparedProducts","productsFromServer","className","href","onClick","cn","type","placeholder","value","onChange","event","target","currentFilter","selectCategory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06397e94.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nfunction getPreparedProducts(products, filters) {\n  const { filterByUser, searchQuery, filterByCategories } = filters;\n\n  let preparedProducts = products.map((product) => {\n    const category = categoriesFromServer.find(\n      currentCategory => product.categoryId === currentCategory.id,\n    ) || null;\n\n    const user = usersFromServer.find(\n      currentUser => category.ownerId === currentUser.id,\n    ) || null;\n\n    return {\n      ...product,\n      category,\n      user,\n    };\n  });\n\n  if (filterByUser) {\n    preparedProducts = preparedProducts.filter(\n      product => product.user.name === filterByUser,\n    );\n  }\n\n  if (searchQuery) {\n    const preparedQuery = searchQuery.toLowerCase();\n\n    preparedProducts = preparedProducts.filter(\n      product => product.name.toLowerCase().includes(preparedQuery),\n    );\n  }\n\n  if (filterByCategories.length) {\n    preparedProducts = preparedProducts.filter(\n      product => filterByCategories.includes(product.category.title),\n    );\n  }\n\n  return preparedProducts;\n}\n\nexport const App = () => {\n  const [filterByUser, setFilterByUser] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterByCategories, setFilterByCategories] = useState([]);\n\n  const preparedProducts = getPreparedProducts(\n    productsFromServer,\n    { filterByUser, searchQuery, filterByCategories },\n  );\n\n  const resetAllFilters = () => {\n    setFilterByUser('');\n    setSearchQuery('');\n    setFilterByCategories([]);\n  };\n\n  const selectCategory = (category) => {\n    if (!filterByCategories.includes(category.title)) {\n      setFilterByCategories(\n        currentFilter => [...currentFilter, category.title],\n      );\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => setFilterByUser('')}\n                className={cn({ 'is-active': !filterByUser })}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  onClick={() => {\n                    setFilterByUser(user.name);\n                  }}\n                  key={user.id}\n                  className={cn({ 'is-active': filterByUser === user.name })}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={searchQuery}\n                  onChange={event => setSearchQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {searchQuery && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setSearchQuery('')}\n                    />\n                  </span>\n                )}\n\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn(\n                  'button is-success mr-6',\n                  { 'is-outlined': filterByCategories.length },\n                )}\n                onClick={() => setFilterByCategories([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  data-cy=\"Category\"\n                  className={cn(\n                    'button mr-2 my-1',\n                    { 'is-info': filterByCategories.includes(category.title) },\n                  )}\n                  href=\"#/\"\n                  key={category.id}\n                  onClick={() => selectCategory(category)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={resetAllFilters}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {preparedProducts.length\n            ? (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className=\"fas fa-sort-down\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {preparedProducts.map(product => (\n                    <tr data-cy=\"Product\" key={product.id}>\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {product.id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">{product.name}</td>\n                      <td data-cy=\"ProductCategory\">\n                        {`${product.category.icon} - ${product.category.title}`}\n                      </td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={cn(\n                          {\n                            'has-text-danger': product.user.sex === 'f',\n                            'has-text-link': product.user.sex === 'm',\n                          },\n                        )}\n                      >\n                        {product.user.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )\n            : (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}